// Data
Object4D::Light light {
    vec3(1.0f, 1.0f, 1.0f),
    vec3(0.2f, 0.2f, 0.2f),
    vec3(0.6f, 0.6f, 0.6f),
    vec3(1.0f, 1.0f, 1.0f),
};

GLfloat vertices_hyperfrustrum[] = {
    // Positions           
    0.6f,   0.6f,   0.6f,   0.6f,
    0.6f,  -0.6f,   0.6f,   0.6f,  
    -0.6f,  -0.6f,   0.6f,   0.6f,
    -0.6f,   0.6f,   0.6f,   0.6f,

    0.6f,   0.6f,  -0.6f,   0.6f,
    0.6f,  -0.6f,  -0.6f,   0.6f,
    -0.6f,  -0.6f,  -0.6f,   0.6f,
    -0.6f,   0.6f,  -0.6f,   0.6f,

    0.8f,   0.8f,   0.8f,  -0.8f,
    0.8f,  -0.8f,   0.8f,  -0.8f,  
    -0.8f,  -0.8f,   0.8f,  -0.8f,
    -0.8f,   0.8f,   0.8f,  -0.8f,

    0.8f,   0.8f,  -0.8f,  -0.8f,
    0.8f,  -0.8f,  -0.8f,  -0.8f,
    -0.8f,  -0.8f,  -0.8f,  -0.8f,
    -0.8f,   0.8f,  -0.8f,  -0.8f,
};

GLuint indices_hyperfrustrum[] = {
    0,  1,  2,
    0,  2,  3,
    0,  5,  1,
    0,  4,  5,
    0,  3,  7,
    0,  7,  4,

    6,  1,  5,
    6,  2,  1,
    6,  3,  2,
    6,  7,  3,
    6,  5,  4,
    6,  7,  4,

    9, 10, 11,
    9, 11,  8,
    9,  8, 12,
    9, 12, 13,
    9, 14, 10,
    9, 13, 14,

    15, 12,  8,
    15,  8, 11,
    15, 14, 13,
    15, 13, 12,
    15, 10, 14,
    15, 11, 10,

    3,  8,  0,
    3, 11,  8,
    3, 11, 10,
    3, 10,  2,
    3, 15, 11,
    3,  7, 15,

    14,  6,  2,
    14,  2, 10,
    14,  5,  6,
    14, 13,  5,
    14,  7,  6,
    14, 15,  7,

    1,  8,  0,
    1,  9,  8,
    1,  5, 13,
    1, 13,  9,
    1,  2, 10,
    1, 10,  9,

    12,  4,  0,
    12,  0,  8,
    12,  4,  5,
    12,  5, 13,
    12,  7,  4,
    12, 15,  7,
};

Object4D::Material frustrumMat {
    vec3(0.15f, 1.0f, 0.1f),
    vec3(1.0f, 0.5f, 0.31f),
    vec3(0.5f, 0.25f, 0.15f),
    vec3(0.8f, 0.8f, 0.8f),
    1.0f,
};

GLfloat vertices_hypertetrahedron[] = {
    1.0f,  1.0f,  1.0f, -0.447,
    1.0f, -1.0f, -1.0f, -0.447,
    -1.0f,  1.0f, -1.0f, -0.447,
    -1.0f, -1.0f,  1.0f, -0.447,
    0.0f,  0.0f,  0.0f,  1.789,
};

GLuint indices_hypertetrahedron[] = {
    0,  3,  1,
    0,  2,  3,
    0,  1,  2,
    3,  2,  1,
    0,  1,  4,
    0,  2,  4,
    0,  3,  4,
    1,  2,  4,
    1,  3,  4,
    2,  3,  4,
};

Object4D::Material tetrahedronMat {
    vec3(0.9f, 0.2f, 0.9f),
    vec3(1.0f, 0.5f, 0.31f),
    vec3(0.5f, 0.25f, 0.15f),
    vec3(0.5f, 0.5f, 0.5f),
    0.8f,
};

GLfloat vertices_hypercube[] = {
    // Positions           
    1.0f,   1.0f,   1.0f,   1.0f,
    1.0f,  -1.0f,   1.0f,   1.0f,  
    -1.0f,  -1.0f,   1.0f,   1.0f,
    -1.0f,   1.0f,   1.0f,   1.0f,

    1.0f,   1.0f,  -1.0f,   1.0f,
    1.0f,  -1.0f,  -1.0f,   1.0f,
    -1.0f,  -1.0f,  -1.0f,   1.0f,
    -1.0f,   1.0f,  -1.0f,   1.0f,

    1.0f,   1.0f,   1.0f,  -1.0f,
    1.0f,  -1.0f,   1.0f,  -1.0f,  
    -1.0f,  -1.0f,   1.0f,  -1.0f,
    -1.0f,   1.0f,   1.0f,  -1.0f,

    1.0f,   1.0f,  -1.0f,  -1.0f,
    1.0f,  -1.0f,  -1.0f,  -1.0f,
    -1.0f,  -1.0f,  -1.0f,  -1.0f,
    -1.0f,   1.0f,  -1.0f,  -1.0f,
};

GLuint indices_hypercube[] = {
    0,  1,  2,
    0,  2,  3,
    0,  5,  1,
    0,  4,  5,
    0,  3,  7,
    0,  7,  4,

    6,  1,  5,
    6,  2,  1,
    6,  3,  2,
    6,  7,  3,
    6,  5,  4,
    6,  7,  4,

    9, 10, 11,
    9, 11,  8,
    9,  8, 12,
    9, 12, 13,
    9, 14, 10,
    9, 13, 14,

    15, 12,  8,
    15,  8, 11,
    15, 14, 13,
    15, 13, 12,
    15, 10, 14,
    15, 11, 10,

    3,  8,  0,
    3, 11,  8,
    3, 11, 10,
    3, 10,  2,
    3, 15, 11,
    3,  7, 15,

    14,  6,  2,
    14,  2, 10,
    14,  5,  6,
    14, 13,  5,
    14,  7,  6,
    14, 15,  7,

    1,  8,  0,
    1,  9,  8,
    1,  5, 13,
    1, 13,  9,
    1,  2, 10,
    1, 10,  9,

    12,  4,  0,
    12,  0,  8,
    12,  4,  5,
    12,  5, 13,
    12,  7,  4,
    12, 15,  7,
};

Object4D::Material cubeMat {
    vec3(0.0f, 0.2f, 0.9f),
    vec3(0.2f, 0.3f, 0.31f),
    vec3(0.5f, 0.25f, 0.15f),
    vec3(0.9f, 0.9f, 0.9f),
    0.5f,
};
